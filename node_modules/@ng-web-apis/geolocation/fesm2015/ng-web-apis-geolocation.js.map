{"version":3,"file":"ng-web-apis-geolocation.js","sources":["../../../projects/geolocation/src/tokens/geolocation.ts","../../../projects/geolocation/src/tokens/geolocation-options.ts","../../../projects/geolocation/src/tokens/geolocation-support.ts","../../../projects/geolocation/src/services/geolocation.service.ts","../../../projects/geolocation/src/public-api.ts","../../../projects/geolocation/src/ng-web-apis-geolocation.ts"],"sourcesContent":["import {inject, InjectionToken} from '@angular/core';\nimport {NAVIGATOR} from '@ng-web-apis/common';\n\nexport const GEOLOCATION = new InjectionToken<Geolocation>(\n    'An abstraction over window.navigator.geolocation object',\n    {\n        factory: () => inject(NAVIGATOR).geolocation,\n    },\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const POSITION_OPTIONS = new InjectionToken<PositionOptions>(\n    'Token for an additional position options',\n    {factory: () => ({})},\n);\n","import {inject, InjectionToken} from '@angular/core';\nimport {GEOLOCATION} from './geolocation';\n\nexport const GEOLOCATION_SUPPORT = new InjectionToken<boolean>(\n    'Is Geolocation API supported?',\n    {\n        factory: () => {\n            return !!inject(GEOLOCATION);\n        },\n    },\n);\n","import {Inject, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {finalize, shareReplay} from 'rxjs/operators';\nimport {GEOLOCATION} from '../tokens/geolocation';\nimport {POSITION_OPTIONS} from '../tokens/geolocation-options';\nimport {GEOLOCATION_SUPPORT} from '../tokens/geolocation-support';\n\n// TODO: Replace type with GeolocationPosition after bumping TS to 4.1.3+\n// @dynamic\n@Injectable({\n    providedIn: 'root',\n})\nexport class GeolocationService extends Observable<Parameters<PositionCallback>[0]> {\n    constructor(\n        @Inject(GEOLOCATION) geolocationRef: Geolocation,\n        @Inject(GEOLOCATION_SUPPORT) geolocationSupported: boolean,\n        @Inject(POSITION_OPTIONS)\n        positionOptions: PositionOptions,\n    ) {\n        let watchPositionId = 0;\n\n        super(subscriber => {\n            if (!geolocationSupported) {\n                subscriber.error('Geolocation is not supported in your browser');\n            }\n\n            watchPositionId = geolocationRef.watchPosition(\n                position => subscriber.next(position),\n                positionError => subscriber.error(positionError),\n                positionOptions,\n            );\n        });\n\n        return this.pipe(\n            finalize(() => geolocationRef.clearWatch(watchPositionId)),\n            shareReplay({bufferSize: 1, refCount: true}),\n        ) as GeolocationService;\n    }\n}\n","/**\n * Public API Surface of geolocation\n */\n\n/* Services */\nexport * from './services/geolocation.service';\n\n/* Tokens */\nexport * from './tokens/geolocation';\nexport * from './tokens/geolocation-options';\nexport * from './tokens/geolocation-support';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;MAGa,WAAW,GAAG,IAAI,cAAc,CACzC,yDAAyD,EACzD;IACI,OAAO,EAAE,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW;AAC/C,CAAA;;MCLQ,gBAAgB,GAAG,IAAI,cAAc,CAC9C,0CAA0C,EAC1C,EAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAC;;MCDZ,mBAAmB,GAAG,IAAI,cAAc,CACjD,+BAA+B,EAC/B;IACI,OAAO,EAAE,MAAK;AACV,QAAA,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;KAChC;AACJ,CAAA;;ACFL;AACA;AAIM,MAAO,kBAAmB,SAAQ,UAA2C,CAAA;AAC/E,IAAA,WAAA,CACyB,cAA2B,EACnB,oBAA6B,EAE1D,eAAgC,EAAA;QAEhC,IAAI,eAAe,GAAG,CAAC,CAAC;QAExB,KAAK,CAAC,UAAU,IAAG;YACf,IAAI,CAAC,oBAAoB,EAAE;AACvB,gBAAA,UAAU,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;AACpE,aAAA;AAED,YAAA,eAAe,GAAG,cAAc,CAAC,aAAa,CAC1C,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EACrC,aAAa,IAAI,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,EAChD,eAAe,CAClB,CAAC;AACN,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,IAAI,CAAC,IAAI,CACZ,QAAQ,CAAC,MAAM,cAAc,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,EAC1D,WAAW,CAAC,EAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CACzB,CAAC;KAC3B;;AAzBQ,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAEf,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,WAAW,EACX,EAAA,EAAA,KAAA,EAAA,mBAAmB,aACnB,gBAAgB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJnB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFf,MAAM,EAAA,CAAA,CAAA;4FAET,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;0DAG4C,WAAW,EAAA,UAAA,EAAA,CAAA;0BAA/C,MAAM;2BAAC,WAAW,CAAA;;0BAClB,MAAM;2BAAC,mBAAmB,CAAA;;0BAC1B,MAAM;2BAAC,gBAAgB,CAAA;;;AChBhC;;AAEG;;ACFH;;AAEG;;;;"}